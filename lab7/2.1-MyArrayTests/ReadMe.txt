Разработайте шаблонный класс CMyArray, 
представляющий собой массив элементов некоторого типа T.

Массив должен предоставлять следующие возможности:
    • Возможность добавления элемента в конец массива
    • Возможность получения количества элементов, содержащихся в массиве
    • Возможность осуществления индексированного доступа к элементам массива 
	при помощи оператора «[]». В случае, если индекс элемента выходит 
	за пределы массива, должно выбрасываться исключение std::out_of_range
    • Возможность изменения длины массива при помощи метода Resize(). 
	В случае, если новая длина массива больше прежней, вставляемые в 
	конец массива элементы должны инициализироваться значением по умолчанию 
	для типа T.
    • Возможность опустошения массива (удаления всех его элементов) 
	при помощи метода Clear.
    • Конструктор копирования и оператор присваивания
    • Конструктор перемещения и перемещающий оператор присваивания
    • Методы begin() и end(), а также rbegin() и rend(), возвращающие 
	итераторы для перебора элементов вектора в прямом и обратном порядке.

Все методы класса должны CMyArray должны предоставлять строгую гарантию 
безопасности исключений и семантику «commit-or-rollback», 
а деструктор – гарантировать отсутствие исключений.

Массив должен быть реализован своими силами без использования класса 
std::vector и ему подобных.

Программа должна демонстрировать работу шаблонного класса CMyArray 
в качестве массива строк (std::string) и массива чисел с плавающей запятой.